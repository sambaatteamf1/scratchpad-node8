{"version":3,"sources":["../../epi/strings/lookAndSay.js"],"names":["Object","defineProperty","exports","value","lookAndSay","getNext","currentNum","iterNo","currentNumStr","String","currentCharFreq","cursor","prevChar","nextNumberStr","currentChar","console","log","Number","charAt","length","n","numArr","index","push"],"mappings":"AAAA;;AAEAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC5CC,QAAO;AADqC,CAA7C;AAGAD,QAAQE,UAAR,GAAqBA,UAArB;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASC,OAAT,CAAiBC,UAAjB,EAA6BC,MAA7B,EAAqC;AACpC,KAAIC,gBAAgBC,OAAOH,UAAP,CAApB;AACA,KAAII,kBAAkB,CAAtB;AACA,KAAIC,SAAS,CAAb;AACA,KAAIC,WAAW,CAAC,CAAhB;AACA,KAAIC,gBAAgB,EAApB;AACA,KAAIC,cAAc,CAAlB;;AAEAC,SAAQC,GAAR,CAAY,OAAZ,EAAqBT,MAArB;;AAEAK,YAAWK,OAAOT,cAAcU,MAAd,CAAqBP,MAArB,CAAP,CAAX;;AAEA,QAAOA,SAASH,cAAcW,MAA9B,EAAsC;;AAErCL,gBAAcG,OAAOT,cAAcU,MAAd,CAAqBP,MAArB,CAAP,CAAd;;AAEAI,UAAQC,GAAR,CAAY,iBAAiBF,WAAjB,GAA+B,YAA/B,GAA8CF,QAA9C,GAAyD,SAAzD,GAAqEF,eAAjF;;AAEA,MAAII,eAAeF,QAAnB,EAA6B;AAC5BF;AACA,GAFD,MAEO;AACNG,oBAAiBJ,OAAOC,eAAP,IAA0BD,OAAOG,QAAP,CAA3C;AACAF,qBAAkB,CAAlB;AACA;;AAEDC,WAASA,SAAS,CAAlB;AACAC,aAAWE,WAAX;AACA;;AAEDD,kBAAiBJ,OAAOC,eAAP,IAA0BD,OAAOG,QAAP,CAA3C;AACAG,SAAQC,GAAR,CAAY,cAAZ,EAA4BH,aAA5B;;AAEA,QAAOI,OAAOJ,aAAP,CAAP;AACA;;AAED,SAAST,UAAT,CAAoBgB,CAApB,EAAuB;AACtB,KAAIC,SAAS,EAAb;AACA,KAAIC,QAAQ,CAAZ;;AAEAD,QAAOE,IAAP,CAAY,CAAZ;AACA,GAAED,KAAF;;AAEA,QAAOA,QAAQF,CAAf,EAAkB;AACjBC,SAAOE,IAAP,CAAYlB,QAAQgB,OAAOC,QAAQ,CAAf,CAAR,EAA2BA,KAA3B,CAAZ;AACAA;AACA;;AAED,QAAOD,MAAP;AACA","file":"lookAndSay.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.lookAndSay = lookAndSay;\n\n//  1, 11, 21, 1211, 111221, 312211\n//  \n//  start with a 1\n//  maintain a str which represents the current number\n//  scan the current runner, hava a frequency counter representing the number of repititions\n//  \n\n\nfunction getNext(currentNum, iterNo) {\n\tvar currentNumStr = String(currentNum);\n\tvar currentCharFreq = 0;\n\tvar cursor = 0;\n\tvar prevChar = -1;\n\tvar nextNumberStr = \"\";\n\tvar currentChar = 0;\n\n\tconsole.log(\"iter:\", iterNo);\n\n\tprevChar = Number(currentNumStr.charAt(cursor));\n\n\twhile (cursor < currentNumStr.length) {\n\n\t\tcurrentChar = Number(currentNumStr.charAt(cursor));\n\n\t\tconsole.log(\"currentChar:\" + currentChar + \" prevChar:\" + prevChar + \" freq: \" + currentCharFreq);\n\n\t\tif (currentChar == prevChar) {\n\t\t\tcurrentCharFreq++;\n\t\t} else {\n\t\t\tnextNumberStr += String(currentCharFreq) + String(prevChar);\n\t\t\tcurrentCharFreq = 1;\n\t\t}\n\n\t\tcursor = cursor + 1;\n\t\tprevChar = currentChar;\n\t}\n\n\tnextNumberStr += String(currentCharFreq) + String(prevChar);\n\tconsole.log(\"next number:\", nextNumberStr);\n\n\treturn Number(nextNumberStr);\n}\n\nfunction lookAndSay(n) {\n\tvar numArr = [];\n\tvar index = 0;\n\n\tnumArr.push(1);\n\t++index;\n\n\twhile (index < n) {\n\t\tnumArr.push(getNext(numArr[index - 1], index));\n\t\tindex++;\n\t}\n\n\treturn numArr;\n}"]}