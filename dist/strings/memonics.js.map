{"version":3,"sources":["../../epi/strings/memonics.js"],"names":["heap","printPossibleC","n","remaining","Math","floor","lastDigit","console","log","lastDigitCharMap","String","partialNumberMap","formCombo","resultArr","forEach","partialWord","character","push","concat","wordArr"],"mappings":";;AAEA,IAAIA,OAAO;AACT,MAAM,CAAE,GAAF,EAAQ,GAAR,CADG;AAET,MAAM,CAAE,GAAF,EAAQ,GAAR,CAFG;AAGT,MAAM,CAAE,GAAF,EAAQ,GAAR;AAHG,CAAX;;AAOA,SAASC,cAAT,CAAwBC,CAAxB,EAA2B;AAC1B,KAAIC,YAAYC,KAAKC,KAAL,CAAWH,IAAI,EAAf,CAAhB;AACA,KAAII,YAAYJ,IAAI,EAApB;;AAEAK,SAAQC,GAAR,CAAY,SAAUF,SAAV,GAAsB,MAAtB,GAA+BH,SAA/B,GAA2C,MAA3C,GAAoDD,CAAhE;;AAEA,KAAIO,mBAAmBT,KAAKU,OAAOJ,SAAP,CAAL,CAAvB;;AAEAC,SAAQC,GAAR,CAAYC,gBAAZ;;AAEA,KAAIN,aAAa,CAAjB,EACC,OAAOM,gBAAP;;AAED,KAAIE,mBAAoBV,eAAeE,SAAf,CAAxB;;AAEA,QAAOS,UAAUD,gBAAV,EAA4BF,gBAA5B,CAAP;AACA;;AAGD,SAASG,SAAT,CAAmBD,gBAAnB,EAAqCF,gBAArC,EAAuD;AACtD,KAAII,YAAY,EAAhB;;AAEAN,SAAQC,GAAR,CAAY,eAAZ;AACAG,kBAAiBG,OAAjB,CAAyB,UAASC,WAAT,EAAsB;;AAE9CR,UAAQC,GAAR,CAAYO,WAAZ;;AAEAN,mBAAiBK,OAAjB,CAAyB,UAASE,SAAT,EAAoB;AAC5CH,aAAUI,IAAV,CAAeF,YAAYG,MAAZ,CAAmBF,SAAnB,CAAf;AACA,GAFD;AAIA,EARD;;AAUA,QAAOH,SAAP;AACA;;AAGD,IAAIM,UAAUlB,eAAe,GAAf,CAAd;AACAM,QAAQC,GAAR,CAAYW,OAAZ","file":"memonics.js","sourcesContent":["\n\nlet heap = {\n  '1' : [ 'A' , 'B' ],\n  '2' : [ 'C' , 'D' ],\n  '3' : [ 'E' , 'F' ]\t\n}\n\n\nfunction printPossibleC(n) {\n\tlet remaining = Math.floor(n / 10)\n\tlet lastDigit = n % 10\n\n\tconsole.log(\" l: \" +  lastDigit + \" r: \" + remaining + \" n: \" + n)\n\n\tlet lastDigitCharMap = heap[String(lastDigit)]\n\n\tconsole.log(lastDigitCharMap)\n\n\tif (remaining == 0)\n\t\treturn lastDigitCharMap\n\n\tlet partialNumberMap  = printPossibleC(remaining)\n\n\treturn formCombo(partialNumberMap, lastDigitCharMap)\n}\n\n\nfunction formCombo(partialNumberMap, lastDigitCharMap) {\n\tlet resultArr = []\n\n\tconsole.log(\"-------------\")\n\tpartialNumberMap.forEach(function(partialWord) {\n\n\t\tconsole.log(partialWord)\n\n\t\tlastDigitCharMap.forEach(function(character) {\n\t\t\tresultArr.push(partialWord.concat(character))\t\n\t\t})\t\n\n\t})\n\n\treturn resultArr\n}\n\n\nlet wordArr = printPossibleC(123)\nconsole.log(wordArr)"]}