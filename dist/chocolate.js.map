{"version":3,"sources":["../server/chocolate.js"],"names":["_","findMedian","A","B","lengthA","length","lengthB","midA","midB","Math","floor","console","log","median","slice","main"],"mappings":";;AAAA;;IAAYA,C;;;;AAIZ,SAASC,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0B;AACzB,KAAIC,UAAUF,EAAEG,MAAhB;AACA,KAAIC,UAAUH,EAAEE,MAAhB;;AAEA,KAAIE,OAAO,CAAX;AACA,KAAIC,OAAO,CAAX;;AAGA,KAAIJ,UAAU,CAAd,EAAiB;AAChBG,SAAOE,KAAKC,KAAL,CAAW,CAACN,UAAQ,CAAT,IAAY,CAAvB,CAAP;AACA;;AAED,KAAIE,UAAU,CAAd,EAAiB;AAChBE,SAAOC,KAAKC,KAAL,CAAW,CAACJ,UAAQ,CAAT,IAAY,CAAvB,CAAP;AACA;;AAGDK,SAAQC,GAAR,CAAY,IAAZ,EAAkBV,CAAlB,EAAqBE,OAArB,EAA8BG,IAA9B;AACAI,SAAQC,GAAR,CAAY,IAAZ,EAAkBT,CAAlB,EAAqBG,OAArB,EAA8BE,IAA9B;;AAEA,KAAIJ,WAAW,CAAX,IAAgBE,UAAU,CAA9B,EAAiC;AAChC,SAAOH,EAAEK,IAAF,CAAP;AACA;;AAED,KAAIF,WAAW,CAAX,IAAgBF,UAAU,CAA9B,EAAiC;AAChC,SAAOF,EAAEK,IAAF,CAAP;AACA;;AAED,KAAIH,WAAW,CAAX,IAAgBE,WAAW,CAA/B,EAAkC;AACjC,SAAO,CAACJ,EAAEK,IAAF,IAAUJ,EAAEK,IAAF,CAAX,IAAsB,CAA7B;AACA;;AAED,KAAIK,SAAS,CAAC,CAAd;;AAEAF,SAAQC,GAAR,CAAY,aAAaV,EAAEK,IAAF,CAAb,GAAuB,GAAvB,GAA6BJ,EAAEK,IAAF,CAAzC;;AAEA,KAAIN,EAAEK,IAAF,KAAWJ,EAAEK,IAAF,CAAf,EAAwB;AACvBK,WAAUX,EAAEK,IAAF,CAAV;AACA,EAFD,MAEO,IAAIL,EAAEK,IAAF,IAAUJ,EAAEK,IAAF,CAAd,EAAuB;;AAE7BN,MAAIF,EAAEc,KAAF,CAAQZ,CAAR,EAAW,CAAX,EAAcK,OAAO,CAArB,CAAJ;AACAJ,MAAIH,EAAEc,KAAF,CAAQX,CAAR,EAAWK,OAAO,CAAlB,CAAJ;;AAEAK,WAASZ,WAAWC,CAAX,EAAcC,CAAd,CAAT;AACA,EANM,MAMA;;AAEND,MAAIF,EAAEc,KAAF,CAAQZ,CAAR,EAAWK,OAAO,CAAlB,CAAJ;AACAJ,MAAIH,EAAEc,KAAF,CAAQX,CAAR,EAAW,CAAX,EAAcK,OAAO,CAArB,CAAJ;;AAEAK,WAASZ,WAAWC,CAAX,EAAcC,CAAd,CAAT;AACA;;AAED,QAAOU,MAAP;AACA;;AAGD,SAASE,IAAT,GAAgB;AACf,KAAIb,IAAI,CAAE,EAAF,EAAM,EAAN,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,EAAuB,EAAvB,CAAR;AACA;AACA,KAAIC,IAAI,CAAE,CAAF,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAR;AACA;AACA;;AAEA,KAAIU,SAAUZ,WAAWC,CAAX,EAAcC,CAAd,CAAd;;AAEAQ,SAAQC,GAAR,CAAY,SAAZ,EAAuBC,MAAvB;AACA;AACA;;AAEDE","file":"chocolate.js","sourcesContent":["import * as _ from \"lodash\"\n\n\n\nfunction findMedian(A, B) {\n\tvar lengthA = A.length\n\tvar lengthB = B.length\n\n\tvar midA = 0\n\tvar midB = 0\n\n\n\tif (lengthA > 0) {\n\t\tmidA = Math.floor((lengthA-1)/2)\n\t} \n\n\tif (lengthB > 0) {\n\t\tmidB = Math.floor((lengthB-1)/2)\n\t}\n\n\n\tconsole.log(\"A:\", A, lengthA, midA)\n\tconsole.log(\"B:\", B, lengthB, midB)\n\n\tif (lengthA == 0 && lengthB > 0) {\n\t\treturn B[midB]\n\t}\n\n\tif (lengthB == 0 && lengthA > 0) {\n\t\treturn A[midA]\n\t}\t\n\n\tif (lengthA == 1 && lengthB == 1) {\n\t\treturn (A[midA] + B[midB]) / 2\n\t}\n\n\tvar median = -1\n\n\tconsole.log(\"compare \" + A[midA] + \" \" + B[midB])\n\n\tif (A[midA] == B[midB]) {\n\t\tmedian =  A[midA]\n\t} else if (A[midA] > B[midB]) {\n\n\t\tA = _.slice(A, 0, midA - 1)\n\t\tB = _.slice(B, midB + 1)\n\t\t\n\t\tmedian = findMedian(A, B)\n\t} else {\n\n\t\tA = _.slice(A, midA + 1)\n\t\tB = _.slice(B, 0, midB - 1)\n\n\t\tmedian = findMedian(A, B)\t\n\t}\n\n\treturn median\n}\n\n\nfunction main() {\n\tvar A = [ 10, 20, 30, 40 ,50 , 60]\n\t// var B = []\n\tvar B = [ 1, 15, 23, 27]\n\t// var A = [ 1, 2]\n\t// var B = [ 3, 4, 5]\n\n\tvar median  = findMedian(A, B)\n\n\tconsole.log(\"Median:\", median)\n\treturn\n}\n\nmain()"]}