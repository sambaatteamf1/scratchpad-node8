{"version":3,"sources":["../server/CaseConverter.js"],"names":["Object","defineProperty","exports","value","_typeof","Symbol","iterator","obj","constructor","prototype","toCamelCase","toSnakeCase","_lodash","require","_","_interopRequireWildcard","__esModule","newObj","key","hasOwnProperty","call","default","str","undefined","length","tokenArr","split","firstToken","each","index","charAt","toUpperCase","substr","join"],"mappings":"AAAA;;;;AAEAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC5CC,QAAO;AADqC,CAA7C;;AAIA,IAAIC,UAAU,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,SAAOA,OAAOC,QAAd,MAA2B,QAA3D,GAAsE,UAAUC,GAAV,EAAe;AAAE,eAAcA,GAAd,0CAAcA,GAAd;AAAoB,CAA3G,GAA8G,UAAUA,GAAV,EAAe;AAAE,QAAOA,OAAO,OAAOF,MAAP,KAAkB,UAAzB,IAAuCE,IAAIC,WAAJ,KAAoBH,MAA3D,IAAqEE,QAAQF,OAAOI,SAApF,GAAgG,QAAhG,UAAkHF,GAAlH,0CAAkHA,GAAlH,CAAP;AAA+H,CAA5Q;;AAEAL,QAAQQ,WAAR,GAAsBA,WAAtB;AACAR,QAAQS,WAAR,GAAsBA,WAAtB;;AAEA,IAAIC,UAAUC,QAAQ,QAAR,CAAd;;AAEA,IAAIC,IAAIC,wBAAwBH,OAAxB,CAAR;;AAEA,SAASG,uBAAT,CAAiCR,GAAjC,EAAsC;AAAE,KAAIA,OAAOA,IAAIS,UAAf,EAA2B;AAAE,SAAOT,GAAP;AAAa,EAA1C,MAAgD;AAAE,MAAIU,SAAS,EAAb,CAAiB,IAAIV,OAAO,IAAX,EAAiB;AAAE,QAAK,IAAIW,GAAT,IAAgBX,GAAhB,EAAqB;AAAE,QAAIP,OAAOS,SAAP,CAAiBU,cAAjB,CAAgCC,IAAhC,CAAqCb,GAArC,EAA0CW,GAA1C,CAAJ,EAAoDD,OAAOC,GAAP,IAAcX,IAAIW,GAAJ,CAAd;AAAyB;AAAE,GAACD,OAAOI,OAAP,GAAiBd,GAAjB,CAAsB,OAAOU,MAAP;AAAgB;AAAE;;AAE7Q;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASP,WAAT,CAAqBY,GAArB,EAA0B;;AAEzB,KAAI,CAAC,OAAOA,GAAP,KAAe,WAAf,GAA6B,WAA7B,GAA2ClB,QAAQkB,GAAR,CAA5C,MAA8DC,SAA9D,IAA2ED,OAAO,IAAtF,EAA4F;AAC3F,SAAO,IAAP;AACA;;AAED,KAAIA,IAAIE,MAAJ,IAAc,CAAlB,EAAqB;AACpB,SAAO,IAAP;AACA;;AAED,KAAIC,WAAWH,IAAII,KAAJ,CAAU,GAAV,KAAkB,EAAjC;;AAEA,KAAIC,aAAa,KAAjB;;AAEAb,GAAEc,IAAF,CAAOH,QAAP,EAAiB,UAAUtB,KAAV,EAAiB0B,KAAjB,EAAwB;;AAExC,MAAI1B,MAAMqB,MAAN,GAAe,CAAnB,EAAsB;AACrB,UAAOC,SAASI,KAAT,CAAP;AACA;AACA;;AAED,MAAI,CAACF,UAAL,EAAiB;AAChBA,gBAAa,IAAb;AACA;AACA;;AAED;AACAF,WAASI,KAAT,IAAkB1B,MAAM2B,MAAN,CAAa,CAAb,EAAgBC,WAAhB,KAAgC5B,MAAM6B,MAAN,CAAa,CAAb,CAAlD;AACA,EAdD;;AAgBA,QAAOP,SAASQ,IAAT,CAAc,EAAd,CAAP;AACA;;AAED;AACA;AACA;AACA,SAAStB,WAAT,CAAqBW,GAArB,EAA0B,CAAE","file":"CaseConverter.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.toCamelCase = toCamelCase;\nexports.toSnakeCase = toSnakeCase;\n\nvar _lodash = require(\"lodash\");\n\nvar _ = _interopRequireWildcard(_lodash);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n//  str = \"this_is_a_test\"\n// \n// \n//  Test cases:\n//  - null string , string of length 0\n//  - invalid snake case . escape \"_\"\n//  - invalid case trim any leading underscores\n//  - handle character that do not have upper  case  { - , 0-9}\n//  \nfunction toCamelCase(str) {\n\n\tif ((typeof str === \"undefined\" ? \"undefined\" : _typeof(str)) === undefined || str == null) {\n\t\treturn null;\n\t}\n\n\tif (str.length == 0) {\n\t\treturn null;\n\t}\n\n\tvar tokenArr = str.split(\"_\") || [];\n\n\tvar firstToken = false;\n\n\t_.each(tokenArr, function (value, index) {\n\n\t\tif (value.length < 1) {\n\t\t\tdelete tokenArr[index];\n\t\t\treturn;\n\t\t}\n\n\t\tif (!firstToken) {\n\t\t\tfirstToken = true;\n\t\t\treturn;\n\t\t}\n\n\t\t// iterate to the first char \n\t\ttokenArr[index] = value.charAt(0).toUpperCase() + value.substr(1);\n\t});\n\n\treturn tokenArr.join(\"\");\n}\n\n// \n// str = \"thisIsATest\"\n// \nfunction toSnakeCase(str) {}"]}