{"version":3,"sources":["../../epi/misc/matrix.js"],"names":["buildInput","n","m","nRows","Math","floor","random","nCols","i","memo","memoOptimalBreak","parenthesize","j","nCost","Infinity","key","undefined","k","iCost","console","log","cost","length","printPattern"],"mappings":";;AAEA,SAASA,UAAT,CAAoBC,CAApB,EAAuB;AACtB,KAAIC,IAAI,EAAR;AACA,KAAIC,QAAQC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,EAA3B,CAAZ;AACA,KAAIC,QAAQH,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,EAA3B,CAAZ;;AAEA,MAAK,IAAIE,IAAE,CAAX,EAAcA,KAAKP,CAAnB,EAAuBO,GAAvB,EAA4B;AAC3BN,IAAEM,CAAF,IAAO,CAACL,KAAD,EAAQI,KAAR,CAAP;AACAJ,UAAQI,KAAR;AACAA,UAAQH,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,EAA3B,CAAR;AACA;;AAED,QAAOJ,CAAP;AACA;;AAGD;AACA;;;AAGA,IAAIA,IAAI,EAAR;AACAA,EAAE,CAAF,IAAO,CAAC,GAAD,EAAM,EAAN,CAAP;AACAA,EAAE,CAAF,IAAO,CAAC,EAAD,EAAK,CAAL,CAAP;AACAA,EAAE,CAAF,IAAO,CAAC,CAAD,EAAI,EAAJ,CAAP;AACAA,EAAE,CAAF,IAAO,CAAC,EAAD,EAAK,EAAL,CAAP;AACAA,EAAE,CAAF,IAAO,CAAC,EAAD,EAAK,EAAL,CAAP;;AAEA,IAAKO,OAAO,EAAZ;AACA,IAAIC,mBAAmB,EAAvB;;AAEA,SAASC,YAAT,CAAsBH,CAAtB,EAAyBI,CAAzB,EAA4B;AAC3B,KAAIC,QAAQC,QAAZ;;AAEA,KAAIN,KAAKI,CAAT,EAAY;AACX,SAAO,CAAP;AACA;;AAED,KAAIG,MAAMP,IAAI,GAAJ,GAAUI,CAApB;AACA,KAAIH,KAAKM,GAAL,KAAaC,SAAjB,EAA4B;AAC3B,SAAOP,KAAKM,GAAL,CAAP;AACA;;AAGD,MAAK,IAAIE,IAAIT,CAAb,EAAgBS,IAAIL,CAApB,EAAuBK,GAAvB,EAA4B;;AAG3B,MAAIC,QAAQP,aAAaH,CAAb,EAAgBS,CAAhB,IAAqBN,aAAaM,IAAE,CAAf,EAAkBL,CAAlB,CAArB,GAA6CV,EAAEM,CAAF,EAAK,CAAL,IAAUN,EAAEU,CAAF,EAAK,CAAL,CAAnE;;AAEA,MAAIM,QAAQL,KAAZ,EAAmB;AAClBH,oBAAiBK,GAAjB,IAAwBE,CAAxB;AACAJ,WAAQK,KAAR;AACA;;AAEDC,UAAQC,GAAR,CAAY,OAAOH,CAAP,GAAW,KAAX,GAAmBT,CAAnB,GAAuB,KAAvB,GAA+BI,CAA/B,GAAmC,SAAnC,GAA+CM,KAA/C,GAAuD,UAAvD,GAAoEL,KAAhF;AAEA;;AAEDJ,MAAKM,GAAL,IAAYF,KAAZ;AACA,QAAOA,KAAP;AACA;;AAGD,IAAIQ,OAAOV,aAAa,CAAb,EAAgBT,EAAEoB,MAAF,GAAS,CAAzB,CAAX;AACAH,QAAQC,GAAR,CAAYC,IAAZ;;AAEA,SAASE,YAAT,CAAsBf,CAAtB,EAAyBI,CAAzB,EAA2B;AAC1B,KAAIJ,KAAKI,CAAT,EAAW;AACVO,UAAQC,GAAR,CAAYlB,EAAEM,CAAF,CAAZ;AACA,EAFD,MAIA;AACC,MAAIO,MAAML,iBAAiBF,IAAG,GAAH,GAASI,CAA1B,CAAV;;AAECO,UAAQC,GAAR,CAAY,GAAZ;AACAG,eAAaf,CAAb,EAAgBO,GAAhB;AACAQ,eAAaR,MAAI,CAAjB,EAAoBH,CAApB;AACAO,UAAQC,GAAR,CAAY,GAAZ;AAGD;AACD;;AAEDD,QAAQC,GAAR,CAAYV,gBAAZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAa,aAAa,CAAb,EAAgBrB,EAAEoB,MAAF,GAAS,CAAzB","file":"matrix.js","sourcesContent":["\n\nfunction buildInput(n) {\n\tlet m = []\n\tlet nRows = Math.floor(Math.random() * 10)\n\tlet nCols = Math.floor(Math.random() * 10)\n\n\tfor (let i=0; i <= n ; i++) {\n\t\tm[i] = [nRows, nCols]\n\t\tnRows = nCols \n\t\tnCols = Math.floor(Math.random() * 10)\n\t}\n\n\treturn m\n}\n\n\n// let m = buildInput(4)\n// console.log(m)\n\n\nlet m = []\nm[0] = [100, 50]\nm[1] = [50, 5]\nm[2] = [5, 25]\nm[3] = [25, 30]\nm[4] = [30, 29]\n\nlet  memo = {}\nlet memoOptimalBreak = {}\n\nfunction parenthesize(i, j) {\n\tlet nCost = Infinity\n\n\tif (i >= j) {\n\t\treturn 0\n\t}\n\n\tlet key = i + \"-\" + j\n\tif (memo[key] != undefined) {\n\t\treturn memo[key]\n\t} \n\n\n\tfor (let k = i; k < j; k++) {\n\t\t\n\n\t\tlet iCost = parenthesize(i, k) + parenthesize(k+1, j) + (m[i][0] * m[j][1])\n\n\t\tif (iCost < nCost) {\n\t\t\tmemoOptimalBreak[key] = k\n\t\t\tnCost = iCost\n\t\t}\n\n\t\tconsole.log(\"k:\" + k + \" i:\" + i + \" j:\" + j + \" iCost:\" + iCost + \" nCost: \" + nCost)\n\n\t}\n\n\tmemo[key] = nCost\n\treturn nCost\n}\n\n\nlet cost = parenthesize(0, m.length-1)\nconsole.log(cost)\n\nfunction printPattern(i, j){\n\tif (i == j){\n\t\tconsole.log(m[i])\n\t}\n\telse\n\t{\n\t\tlet key = memoOptimalBreak[i +'-' + j]\n\t\t\n\t\t\tconsole.log(\"(\")\n\t\t\tprintPattern(i, key)\n\t\t\tprintPattern(key+1, j)\n\t\t\tconsole.log(\")\")\t\t\t\n\t\t\n\n\t}\n}\n\nconsole.log(memoOptimalBreak)\n// { '3-4': 3,\n//   '2-4': 3,\n//   '2-3': 2,\n//   '1-4': 1,\n//   '1-2': 1,\n//   '1-3': 1,\n//   '0-4': 1,\n//   '0-1': 0,\n//   '0-2': 1,\n//   \n//   '0-3': 1 }\n\nprintPattern(0, m.length-1)"]}